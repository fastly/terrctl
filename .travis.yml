sudo: false
language: go
os:
- linux
go:
- 1.x

script:
- gimme --list
- echo $TRAVIS_GO_VERSION
- cd terrctl
- go clean
- env GOOS=windows GOARCH=386 go build -ldflags="-s -w"
- mkdir win32
- ln terrctl.exe win32/
- zip -9 -r terrctl-win32-${TRAVIS_TAG:-dev}.zip win32
- go clean
- env GOOS=windows GOARCH=amd64 go build -ldflags="-s -w"
- mkdir win64
- ln terrctl.exe win64/
- zip -9 -r terrctl-win64-${TRAVIS_TAG:-dev}.zip win64
- go clean
- env GO386=387 GOOS=openbsd GOARCH=386 go build -ldflags="-s -w"
- mkdir openbsd-i386
- ln terrctl openbsd-i386/
- tar czpvf terrctl-openbsd_i386-${TRAVIS_TAG:-dev}.tar.gz openbsd-i386
- go clean
- env GOOS=openbsd GOARCH=amd64 go build -ldflags="-s -w"
- mkdir openbsd-amd64
- ln terrctl openbsd-amd64/
- tar czpvf terrctl-openbsd_amd64-${TRAVIS_TAG:-dev}.tar.gz openbsd-amd64
- go clean
- env GOOS=freebsd GOARCH=386 go build -ldflags="-s -w"
- mkdir freebsd-i386
- ln terrctl freebsd-i386/
- tar czpvf terrctl-freebsd_i386-${TRAVIS_TAG:-dev}.tar.gz freebsd-i386
- go clean
- env GOOS=freebsd GOARCH=amd64 go build -ldflags="-s -w"
- mkdir freebsd-amd64
- ln terrctl freebsd-amd64/
- tar czpvf terrctl-freebsd_amd64-${TRAVIS_TAG:-dev}.tar.gz freebsd-amd64
- go clean
- env GOOS=freebsd GOARCH=arm go build -ldflags="-s -w"
- mkdir freebsd-arm
- ln terrctl freebsd-arm/
- tar czpvf terrctl-freebsd_arm-${TRAVIS_TAG:-dev}.tar.gz freebsd-arm
- go clean
- env GOOS=freebsd GOARCH=arm GOARM=7 go build -ldflags="-s -w"
- mkdir freebsd-armv7
- ln terrctl freebsd-armv7/
- tar czpvf terrctl-freebsd_armv7-${TRAVIS_TAG:-dev}.tar.gz freebsd-armv7
- go clean
- env GOOS=dragonfly GOARCH=amd64 go build -ldflags="-s -w"
- mkdir dragonflybsd-amd64
- ln terrctl dragonflybsd-amd64/
- tar czpvf terrctl-dragonflybsd_amd64-${TRAVIS_TAG:-dev}.tar.gz dragonflybsd-amd64
- go clean
- env GOOS=netbsd GOARCH=386 go build -ldflags="-s -w"
- mkdir netbsd-i386
- ln terrctl netbsd-i386/
- tar czpvf terrctl-netbsd_i386-${TRAVIS_TAG:-dev}.tar.gz netbsd-i386
- go clean
- env GOOS=netbsd GOARCH=amd64 go build -ldflags="-s -w"
- mkdir netbsd-amd64
- ln terrctl netbsd-amd64/
- tar czpvf terrctl-netbsd_amd64-${TRAVIS_TAG:-dev}.tar.gz netbsd-amd64
- go clean
- env CGO_ENABLED=0 GOOS=linux GOARCH=386 go build -ldflags="-s -w"
- mkdir linux-i386
- ln terrctl linux-i386/
- tar czpvf terrctl-linux_i386-${TRAVIS_TAG:-dev}.tar.gz linux-i386
- go clean
- env CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-s -w"
- mkdir linux-x86_64
- ln terrctl linux-x86_64/
- tar czpvf terrctl-linux_x86_64-${TRAVIS_TAG:-dev}.tar.gz linux-x86_64
- go clean
- env CGO_ENABLED=0 GOOS=linux GOARCH=arm go build -ldflags="-s -w"
- mkdir linux-arm
- ln terrctl linux-arm/
- tar czpvf terrctl-linux_arm-${TRAVIS_TAG:-dev}.tar.gz linux-arm
- go clean
- env CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -ldflags="-s -w"
- mkdir linux-arm64
- ln terrctl linux-arm64/
- tar czpvf terrctl-linux_arm64-${TRAVIS_TAG:-dev}.tar.gz linux-arm64
- go clean
- env CGO_ENABLED=0 GOOS=linux GOARCH=mips GOMIPS=softfloat go build -ldflags="-s
  -w"
- mkdir linux-mips
- ln terrctl linux-mips/
- tar czpvf terrctl-linux_mips-${TRAVIS_TAG:-dev}.tar.gz linux-mips
- go clean
- env CGO_ENABLED=0 GOOS=linux GOARCH=mipsle GOMIPS=softfloat go build -ldflags="-s
  -w"
- mkdir linux-mipsle
- ln terrctl linux-mipsle/
- tar czpvf terrctl-linux_mipsle-${TRAVIS_TAG:-dev}.tar.gz linux-mipsle
- go clean
- env CGO_ENABLED=0 GOOS=linux GOARCH=mips64 go build -ldflags="-s -w"
- mkdir linux-mips64
- ln terrctl linux-mips64/
- tar czpvf terrctl-linux_mips64-${TRAVIS_TAG:-dev}.tar.gz linux-mips64
- go clean
- env CGO_ENABLED=0 GOOS=linux GOARCH=mips64le go build -ldflags="-s -w"
- mkdir linux-mips64le
- ln terrctl linux-mips64le/
- tar czpvf terrctl-linux_mips64le-${TRAVIS_TAG:-dev}.tar.gz linux-mips64le
- go clean
- env GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w"
- mkdir macos
- ln terrctl macos/
- tar czpvf terrctl-macos-${TRAVIS_TAG:-dev}.tar.gz macos
- go clean
- env CC=arm-linux-androideabi-clang CXX=arm-linux-androideabi-clang++ CGO_ENABLED=1
  GOOS=android GOARCH=arm GOARM=7 go build -ldflags="-s -w"
- mkdir android-arm
- ln terrctl android-arm/
- zip -9 -r terrctl-android_arm-${TRAVIS_TAG:-dev}.zip android-arm
- go clean
- env CC=aarch64-linux-android-clang CXX=aarch64-linux-android-clang++ CGO_ENABLED=1
  GOOS=android GOARCH=arm64 go build -ldflags="-s -w"
- mkdir android-arm64
- ln terrctl android-arm64/
- zip -9 -r terrctl-android_arm64-${TRAVIS_TAG:-dev}.zip android-arm64
- go clean
- env CC=i686-linux-android-clang CXX=i686-linux-android-clang++ CGO_ENABLED=1 GOOS=android
  GOARCH=386 go build -ldflags="-s -w"
- mkdir android-i386
- ln terrctl android-i386/
- zip -9 -r terrctl-android_i386-${TRAVIS_TAG:-dev}.zip android-i386
- go clean
- env CC=x86_64-linux-android-clang CXX=x86_64-linux-android-clang++ CGO_ENABLED=1
  GOOS=android GOARCH=amd64 go build -ldflags="-s -w"
- mkdir android-x86_64
- ln terrctl android-x86_64/
- zip -9 -r terrctl-android_x86_64-${TRAVIS_TAG:-dev}.zip android-x86_64
- ls -l terrctl-*.tar.gz terrctl-*.zip

before_install:
- NDK_VER=r18
- curl -LO http://dl.google.com/android/repository/android-ndk-${NDK_VER}-linux-x86_64.zip
- unzip -q android-ndk-${NDK_VER}-linux-x86_64.zip -d $HOME
- rm android-ndk-${NDK_VER}-linux-x86_64.zip
- NDK_TOOLS=$HOME/android-ndk-${NDK_VER}
- NDK_STANDALONE=$HOME/ndk-standalone-${NDK_VER}
- MAKE_TOOLCHAIN=$NDK_TOOLS/build/tools/make_standalone_toolchain.py
- for arch in x86 arm; do python $MAKE_TOOLCHAIN --arch $arch --api 19 --install-dir
  $NDK_STANDALONE/$arch; PATH=$PATH:$NDK_STANDALONE/$arch/bin; done
- for arch in x86_64 arm64; do python $MAKE_TOOLCHAIN --arch $arch --api 21 --install-dir
  $NDK_STANDALONE/$arch; PATH=$PATH:$NDK_STANDALONE/$arch/bin; done
- rm -rf $NDK_TOOLS

after_success:
- mkdir -p app/assets app/src
- echo OK > app/assets/ok
- echo 'void run(void) { }' > app/src/main.c
- ./linux-x86_64/terrctl -loglevel 0 -logfile log app
- grep -qF 'New instance deployed' log
- curl -Ls $(grep -F 'New instance deployed' log | sed -E 's/.+ at \[([/:.a-zA-Z0-9-]+)\]/\1/')/ok | grep -qF OK
